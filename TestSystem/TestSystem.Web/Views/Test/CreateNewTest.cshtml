@model TestSystem.Web.Models.TestCreateViewModel



<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CreateNewTest</title>
</head>

<body>
    <div class="container">
        <div class="card-header-tabs">
            @using (Html.BeginForm("CreateNewTest", "Test", FormMethod.Post))
            {
                @Html.AntiForgeryToken()


                <h4 class="text-info alert-info">Add new test here...</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row float-lg-left col-md-5">
                    <div class="container">
                        <div class="form-inline">
                            <div class=" form-group">
                                <div class="col-md-12">
                                    <label class="text-center col-md-12"> Choose theme... </label>
                                    @Html.DropDownListFor(model => model.selectedTheme, Model.Theme,
                                 htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>

                            <div class=" form-group">
                                <div class="col-md-12">
                                    <label class="text-center col-md-12">Choose difficult...</label>
                                    @Html.DropDownListFor(model => model.selectedDifficult, Model.Difficult,
                             htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TestName, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.TestName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TestName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TestDescription, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.TestDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TestDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                </div>
            }
                <div class="row col-md-5">
                    <label class=""> Put answers : </label>
                    <div class="card-group ">
                        @Html.Action("GetQuestions")
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>

            
        </div>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

</body>
</html>

