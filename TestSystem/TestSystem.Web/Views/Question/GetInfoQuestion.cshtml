@model TestSystem.Logic.LogicView.FiltrationViewModel
@using PagedList.Mvc


<!DOCTYPE html>
<html>
<head>
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/Tables.css" rel="stylesheet" type="text/css" />
    <meta name="viewport" content="width=device-width" />
    <title>Tests info</title>
</head>
<body>
    <div class="container">
        <h2>More information about questions</h2>
        <form method="get">
            <div class="form-inline">
                @using (Html.BeginForm())
                {
                    <div class="col-md-3">
                        <div class="input-group">

                            @Html.TextBox("search",
                           "", new { placeholder = "Search for..." , @class="form-control" })

                            <span class="input-group-append">
                                <button class="btn btn-primary" type="submit">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                }

                <div class="col-md-2">
                    <div class="form-inline">
                        @Html.DropDownList("IdTheme", Model.Themes as SelectList,
                                    htmlAttributes: new { @class = "form-control" ,
                                    placeholder = "Theme..."})
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-inline">

                        @Html.DropDownList("difficult", Model.Difficult as SelectList,
                                htmlAttributes: new { @class = "form-control" ,
                                placeholder = "Difficult..."})

                    </div>
                </div>
                <input type="submit" value="Sort" class="btn btn-default" />

            </div>
        </form>
        <div id="tables">
            <table class="table table-bordered table-hover" width="100" cellspacing="0">
                <thead class="show">
                    <tr>
                        <th>Question </th>
                        <th>Theme</th>
                        <th>Difficult</th>
                        <th>Creation at</th>
                        <th>Tools</th>
                    </tr>
                </thead>

                @foreach (var item in Model.Questions)
                {
                    string selectedRow = "";
                    if (item.IdQuestion == Model.IdQuestion)
                    {
                        selectedRow = "bg-warning";
                    }
                    <tr class="@selectedRow">
                        <td width="300">
                            @Html.DisplayFor(modelItem => item.QuestionText)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Theme.ThemeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Difficult)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreateDate)
                        </td>
                        <td>
                            <button class="btn btn-primary"
                                    onclick="location.href=
                                    '@Url.Action( "GetInfoQuestion","Question" , new { IdQuestion = item.IdQuestion,
                                page = Model.Questions.PageNumber}
                                )#More'">
                                More...
                            </button>
                            <button class="btn btn-primary"
                                    onclick="location.href='@Url.Action("EditQuestion", "Question" ,new { IdQuestion = item.IdQuestion })'">
                                Edit
                            </button>
                            <button class="btn btn-danger"
                                    onclick="location.href='@Url.Action("DeleteQuestion", "Question",new {IdQuestion = item.IdQuestion })'">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </table>
            <div class="form-row">
                <div class="col-md-3">
                    Page @(Model.Questions.PageCount < Model.Questions.PageNumber ? 0 : Model.Questions.PageNumber)
                    from @Model.Questions.PageCount
                </div>
            </div>
            <div class="btn-group" id="contentPager">
                @Html.PagedListPager(Model.Questions, page => Url.Action("GetInfoQuestion", new { page }))
                @*/*   PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() {HttpMethod = "GET" , UpdateTargetId = "tables"}))*/*@
            </div>
        </div>

        <div class="container" id="More">
            @if (Model.Answers != null)
            {
                foreach (var item in Model.Questions)
                {
                    if (item.IdQuestion == Model.IdQuestion)
                    {
            <div class="text-center">
                <p style="font-size:x-large">@Html.DisplayFor(itemModel => item.QuestionText)</p>
            </div>
                    }
                }

                <h3>
                    Answers in Selected Question
                </h3>
                <table class="table table-bordered table-hover">
                    <tr>
                        <th>Answer</th>
                        <th>Correct</th>
                    </tr>
                    @foreach (var item in Model.Answers)
                    {
                        <tr>
                            <td>
                                @item.AnswerText
                            </td>
                            <td>
                                @item.Correct
                            </td>
                        </tr>
                    }
                </table>
            }

            @if (Model.Tests != null)
            {
                <h3>Test in which u can find this question:</h3>
                <table class="table table-bordered table-hover">
                    <tr>
                        <th>Test</th>
                        <th>Theme</th>
                        <th>Desrciption</th>
                    </tr>

                    @foreach (var item in Model.Tests)
                    {
                        string selectedRow = "";
                        if (item.IdTest == ViewBag.IdTest)
                        {
                            selectedRow = "success";
                        }
                        <tr class="@selectedRow">
                            <td>
                                @item.TestName
                            </td>
                            <td>
                                @item.Theme.ThemeName
                            </td>
                            <td>
                                @item.TestDescription
                            </td>
                        </tr>
                    }

                </table>
            }
        </div>
    </div>
</body>
</html>
@Scripts.Render("~/scripts/jquery-3.3.1.js")
@Scripts.Render("~/scripts/jquery.unobtrusive-ajax.js")
