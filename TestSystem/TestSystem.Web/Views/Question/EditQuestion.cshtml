@model TestSystem.Logic.ViewModel.QuestionCreateViewModel

@{
    ViewBag.Title = "EditQuestion";
}

<h2>EditQuestion</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>QuestionDTO</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.IdQuestion)

    <div class="form-group">
        @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div style="position:relative;">
            <label>Картинка</label>
            <a class='btn' href='javascript:;'>
                Выберите файл...
                <input type="file" name="Image" size="40"
                       style="position:absolute;z-index:2;top:0;
                                left:0;filter: alpha(opacity=0); opacity:0;
                                background-color:transparent;color:transparent;"
                       onchange='$("#upload-file-info").html($(this).val());'>
            </a>
            <span class='label label-info' id="upload-file-info"></span>
        </div>
        @if (Model.QuestionImage == null)
        {
            <div class="form-control-static">Нет картинки</div>
        }
        else
        {
            <img class="img-thumbnail" width="150" height="150"
                 src="@Url.Action("GetImage", "Question",
                        new { Model.IdQuestion })" />
        }
    </div>
    @for (int i = 0; i < Model.AnswerNumber; i++)
    {
        @Html.HiddenFor(model => model.Answers[i].IdAnswer)
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Answers[i].AnswerText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Answers[i].Correct, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
